// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" data-theme=\"dark\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link href=\"https://cdn.jsdelivr.net/npm/daisyui@5\" rel=\"stylesheet\" type=\"text/css\"><script src=\"https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4\"></script><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script><meta name=\"htmx-config\" content='{\n\t\t\t        \"responseHandling\":[\n\t\t\t            {\"code\":\"204\", \"swap\": false},\n\t\t\t            {\"code\":\"[23]..\", \"swap\": true},\n\t\t\t            {\"code\":\"[4]..\", \"swap\": true},\n\t\t\t            {\"code\":\"...\", \"swap\": false, \"error\": true}\n\t\t\t        ]\n\t\t\t    }'><title>MLspace</title></head><body class=\"bg-base-100\"><main id=\"main\"><div id=\"toast-message\" class=\"toast toast-top toast-center hidden fixed z-50\"><div id=\"toast-alert\" class=\"alert alert-error\"><span></span></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</main></body><script>\n            document.body.addEventListener(\"unsuccessful-event\", function(evt) {\n                const toast = document.querySelector(\"#toast-message\");\n                const alertDiv = toast.querySelector(\"#toast-alert\");\n                const spanElement = alertDiv.querySelector(\"span\");\n                const errorText = evt.detail.value\n                if (toast && spanElement && errorText) {\n                    spanElement.textContent = errorText;\n                    toast.classList.remove('hidden');\n                    setTimeout(() => {\n                        toast.classList.add('hidden');\n                    }, 1000);\n                }\n            });\n        </script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
