version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aispace_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aispace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: keycloak
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 1s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: aispace_keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    
  keycloak-setup:
    image: curlimages/curl:latest
    container_name: keycloak_setup
    volumes:
      - ./scripts/setup-keycloak.sh:/setup-keycloak.sh
    entrypoint: ["/bin/sh", "/setup-keycloak.sh"]
    restart: "no"

volumes:
  postgres_data:
